import React, { useState } from 'react';
import Head from 'next/head';
import style from '../styles/documentation.module.css';
import home_style from '../styles/Home.module.css';

import { Container, Row, Col } from 'reactstrap';

const modalContent = {
    "Sistema Uninúcleo C": {
        "title": "Sistema Uninúcleo em C",
        "content": "Este é o sistema operacional que será compilado e executará em uma instancia da máquina virtual criada pelo hipervisor. Ao ser compilado, é gerado um único arquivo com um monolito contendo as bibliotecas necessárias para o funcionamento e o kernel do sistema operacional"
    },
    "Sistema Uninúcleo Java": {
        "title": "Sistema Uninúcleo em Java",
        "content": "Este é o sistema operacional que será compilado e executará em uma instancia da máquina virtual criada pelo hipervisor. Ao ser compilado, é gerado um único arquivo com um monolito contendo as bibliotecas necessárias para o funcionamento e o kernel do sistema operacional. Para o caso do Sistema em Java, as bibliotecas estão contidas no interpretador Java VM."
    },
    "Sistema Uninúcleo Ruby": {
        "title": "Sistema Uninúcleo em Ruby",
        "content": "Este é o sistema operacional que será compilado e executará em uma instancia da máquina virtual criada pelo hipervisor. Ao ser compilado, é gerado um único arquivo com um monolito contendo as bibliotecas necessárias para o funcionamento e o kernel do sistema operacional. Para o caso do Sistema em Ruby, as bibliotecas estão contidas no runtime Ruby."
    },
    "libC": {
        "title": "Bibliotecas escritas em C",
        "content": "Conjunto de bibliotecas necessárias para execução do programa em C. Elas contém as abstrações necessárias, métodos e o programa que será alvo da execução do sistema IoT."
    },
    "java": {
        "title": "Java Virtual Machine",
        "content": "Conjunto de bibliotecas necessárias para execução do programa em Java. Elas contém as abstrações necessárias, métodos e o programa que será alvo da execução do sistema IoT e a propria Virtual Machine que interpretará o bytecode java."
    },
    "ruby": {
        "title": "Interpretador Runtime Ruby",
        "content": "Conjunto de bibliotecas necessárias para execução do programa em Ruby. Elas contém as abstrações necessárias, métodos e o programa que será alvo da execução do sistema IoT e o próprio interpretador para transpilar em tempo de execução o código para o mais baixo nível."
    },
    "kernel": {
        "title": "Kernel unificado do Sistema Operacional",
        "content": "O unikernel é responsável por ser o elo entre o hardware e o software. Ele oferece os drivers para que os aplicativos executados tenham acesso aos recursos do hardware, como leitura em disco e acesso à rede sem fio."
    },
    "vm": {
        "title": "Maquina Virtual do SO",
        "content": "Maquina virtual onde está sendo executado o sistema operacional"
    },
    "hipervisor": {
        "title": "Hipervisor",
        "content": "É um software que cria e executa maquinas virtuais (VMs). Também chamado de monitor de máquina virtual. Ele isola o SO dos recursos do hardware virtual e permite a criação e o gerenciamento dessas máquinas. Nesse modelo o hipervisor é chamado de guest."
    },
    "hardware": {
        "title": "Hardware",
        "content": "Hardware que sera compartilhado pelas diversas maquinas virtuais criadas pelo hipervisor."
    },
};

const Documentation = () => {

    const [title, SetTitle] = useState("");
    const [content, SetContent] = useState("");

    const handleClickClose = () => {
        const modal = document.getElementById('modal');
        modal.style.display = 'none';
    }

    const handleBack = () => {
        window.close();
    }

    const handleClick = (event) => {
        const modal = document.getElementById('modal');
        modal.style.display = 'block';
        const id = event.target.id;
        SetTitle(modalContent[`${id}`].title);
        SetContent(modalContent[`${id}`].content);
    }
    return (
        <div className={home_style.container} id="main">
            <Head>
                <title>IoT</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.png" type="image/x-icon" />
            </Head>
            <main className={style.main}>
                <Container>
                    <Col>
                        <h1 className={home_style.title}>
                            SOs <span className={home_style.span}>IoT</span>
                        </h1>
                        <Row className={style.content}>
                            <Col>
                                <p className={style.title}>Sistemas Uninúcleo</p>
                                <p>
                                    Sistemas uninúcleo são sistemas operacionais simples e voltados para a execução de uma tarefa.
                                    Por exemplo. O sistema de um relógio gigital. Ele pode ser considerado um sistema uninúcleo, uma vez
                                    que ele atende a essa definição.
                                </p>
                                <p>
                                    Esses sistemas se caracterizam pela compilação do código do programa alvo e das bibliotecas e drivers
                                    necessários para sua execução e "conversa" com o hardware em um único arquivo. Esse monolito (código escrito em um único arquivo)
                                    traz algumas vantagens. A primeira delas é o desempenho do sistema. Como não existem muitas camadas de abstração, pois todos
                                    os comandos necessários estão em um único arquivo, omite-se os tempos de leitura de arquivos externos ao código do programa alvo.
                                </p>
                            </Col>
                            <Col>
                                <Row>
                                    <Col className={style.systemsCols}>
                                        <div className={style.systemC} id="Sistema Uninúcleo C" onClick={handleClick}>
                                            binary C app
                                            <div className={style.lib} id="libC">
                                                libC
                                            </div>
                                            <div className={style.kernel} id="kernel">
                                                unikernel
                                            </div>
                                        </div>
                                        <span className={style.label} id="vm" onClick={handleClick}>virtual machine</span>
                                    </Col>
                                    <Col className={style.systemsCols}>
                                        <div className={style.systemJava} id="Sistema Uninúcleo Java" onClick={handleClick}>
                                            Java app
                                            <div className={style.lib} id="java">
                                                Java VM
                                            </div>
                                            <div className={style.kernel} id="kernel">
                                                unikernel
                                            </div>
                                        </div>
                                        <span className={style.label} id="vm" onClick={handleClick}>virtual machine</span>
                                    </Col>
                                    <Col className={style.systemsCols}>
                                        <div className={style.systemRuby} id="Sistema Uninúcleo Ruby" onClick={handleClick}>
                                            Ruby app
                                            <div className={style.lib} id="ruby">
                                                Ruby runtime
                                            </div>
                                            <div className={style.kernel} id="kernel">
                                                unikernel
                                            </div>
                                        </div>
                                        <span className={style.label} id="vm" onClick={handleClick}>virtual machine</span>
                                    </Col>
                                </Row>
                                <Row>
                                    <Row className={style.hipervisor} id="hipervisor" onClick={handleClick}>
                                        hipervisor
                                    </Row>
                                    <Row className={style.hardware} id="hardware" onClick={handleClick}>
                                        hardware
                                    </Row>
                                </Row>
                                <div className={style.fonte}>
                                    <p>Modelo conceitual de um Sistema Uninúcleo. Clique nas partes do sistema para ver mais informações</p>
                                    <span className={style.legenda}>Fonte: MAZIERO, Sistemas Operacionais: Conceitos e mecanismos</span>
                                </div>
                            </Col>
                        </Row>
                        <Row className={style.content}>
                            <Col>
                                <p>
                                    Este modelo é muito utilizado para o ambiente cloud. Nele não existe um computador para executar cada sistema, mas sim a separação
                                    do hardware em várias máquinas virtuais que dividirão os recursos disponíveis. Assim é possível executar diversos processos em
                                    diversos sistemas operacionais. Sem essa tática só é possível executar um único sistema operacional por hardware.
                                </p>
                            </Col>
                            <Col>
                                <p>
                                    Outra forma de utilização de sistemas uninúcleo é a utilização em dispositivos embarcados. Esses dispositivos são caracterizados por
                                    programas ou sistemas gravados em microcontroladores. Estão presentes em aparelhos de ar condicionado, robos aspiradores, tablets,
                                    smartphones, MP3 players...
                                </p>
                            </Col>
                        </Row>
                    </Col>
                    <span className={style.back} onClick={handleBack}>voltar</span>
                </Container>
            </main>
            <div className={style.modal} id="modal">
                <div className={style.modalContent}>
                    <div className={style.modalTitle}>{title}</div>
                    <div className={style.modalBody}>{content}</div>
                    <div className={style.close} onClick={handleClickClose}>Fechar</div>
                </div>
            </div>
        </div>
    );
}

export default Documentation;